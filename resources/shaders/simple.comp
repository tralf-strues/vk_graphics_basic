#version 430

#define WORK_GROUP_SIZE 32
#define KERNEL_SIZE 7

layout( local_size_x = WORK_GROUP_SIZE ) in;

layout( push_constant ) uniform params {
  uint len;
} PushConstant;

layout(std430, binding = 0) buffer readonly Input
{
    float array[];
};

layout(std430, binding = 1) buffer writeonly Output
{
    float result[];
};

void main() 
{
    int elemIdx = int(gl_GlobalInvocationID.x);

    int n = int(PushConstant.len);

    if (elemIdx < n)
    {
        float curResult = 0.0;

        for (int windowOffset = -KERNEL_SIZE / 2; windowOffset <= KERNEL_SIZE / 2; ++windowOffset)
        {
            int idx = elemIdx + windowOffset;

            if (idx >= 0 && idx < n)
            {
                curResult += array[idx];
            }
        }

        curResult /= float(KERNEL_SIZE);

        result[elemIdx] = array[elemIdx] - curResult;
    }
}